; 
; Install Script for Star Hotel
;  [Inno Setup Toolbar Advanced - Script Wizard]
; 
; Generated by the 'Inno Setup Toolbar Advanced for Visual Basic 6.0'
; Written and Programmed by Brian Haase and Martin Rizal
; 
; Generated for Inno Setup Compiler, Version 4+
; 
  
[Setup]
AppName=Star Hotel
AppVerName=Star Hotel 1.2.0.22
AppPublisher=Computerise System Solutions
AppPublisherURL=http://computerise.my/room-booking-system
DefaultDirName={pf}\Star Hotel
DefaultGroupName=Computerise System Solutions
LicenseFile=
Compression=lzma
SolidCompression=yes
PrivilegesRequired=admin
  
[Tasks]
;Installation Task
Name: vb6; Description: Visual Basic 6.0 Core Runtime Library; GroupDescription: Install Component(s):; Check: NeedVB('6.0.98.15');
Name: ado; Description: Microsoft Data Access Components; GroupDescription: Install Component(s):; Check: NeedMdac('4.71.1015.0');
Name: runas; Description: Run program as Administrator; GroupDescription: Program Setting:
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
  
[Files]
;Program files for deployment


;Executable File or Main Component
Source: "StarHotel.exe"; DestDir: {app}; Flags: ignoreversion 32bit


;Visual Basic 6.0 Runtime Files
Source: MSVCRT40.DLL; DestDir: {sys}; Flags: onlyifdoesntexist uninsneveruninstall sharedfile 32bit allowunsafefiles; Tasks: vb6
Source: OLEPRO32.DLL; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile regserver noregerror 32bit allowunsafefiles; Tasks: vb6
Source: COMCAT.DLL; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile regserver noregerror 32bit allowunsafefiles; Tasks: vb6
Source: ASYCFILT.DLL; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile 32bit allowunsafefiles; Tasks: vb6
Source: OLEAUT32.DLL; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile regserver noregerror 32bit allowunsafefiles; Tasks: vb6
Source: STDOLE2.TLB; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile 32bit allowunsafefiles; Tasks: vb6
Source: msvbvm60.dll; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile regserver noregerror 32bit allowunsafefiles; Tasks: vb6




;Dependencies and Files
;Dependencies and Files
Source: "crviewer.dll"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\crviewer.dll'));
Source: "CRAXDRT.DLL"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\CRAXDRT.DLL'));
Source: "P2SMON.DLL"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\P2SMON.DLL'));
Source: "CRXLAT32.DLL"; DestDir: {win}\Crystal; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{win}Crystal\CRXLAT32.DLL'));
Source: "u2DDISK.DLL"; DestDir: {win}\Crystal; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{win}Crystal\u2DDISK.DLL'));
Source: "u2dapp.dll"; DestDir: {win}\Crystal; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{win}Crystal\u2dapp.dll'));
Source: "crxf_RTF.DLL"; DestDir: {win}\Crystal; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{win}Crystal\crxf_RTF.DLL'));
Source: "u2FWORDW.DLL"; DestDir: {win}\Crystal; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{win}Crystal\u2FWORDW.DLL'));
Source: "u2FXLS.DLL"; DestDir: {win}\Crystal; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{win}Crystal\u2FXLS.DLL'));
Source: "crxf_PDF.DLL"; DestDir: {win}\Crystal; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{win}Crystal\crxf_PDF.DLL'));
Source: "MSCOMCTL.OCX"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSCOMCTL.OCX'));
Source: "MSCOMCT2.OCX"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSCOMCT2.OCX'));
Source: "crtslv.dll"; DestDir: {pf}\Seagate Software\Shared; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{pf}Seagate Software\Shared\crtslv.dll'));
Source: "ExportModeller.dll"; DestDir: {pf}\Seagate Software\Shared; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{pf}Seagate Software\Shared\ExportModeller.dll'));
Source: "pg32conv.dll"; DestDir: {pf}\Seagate Software\Shared; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{pf}Seagate Software\Shared\pg32conv.dll'));
Source: "sscsdk80.dll"; DestDir: {pf}\Seagate Software\Shared; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{pf}Seagate Software\Shared\sscsdk80.dll'));
Source: "P2smon.dll"; DestDir: {app}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{app}\P2smon.dll'));
Source: "temp"; DestDir: {app}\Data; Flags: ignoreversion 32bit; Check: FileNotFound(ExpandConstant('{app}Data\temp'));
Source: "DemoData.mdb"; DestDir: {app}\Data; Flags: ignoreversion 32bit; Check: FileNotFound(ExpandConstant('{app}Data\DemoData.mdb'));
Source: "Booking Report by Staff.rpt"; DestDir: {app}\Report; Flags: ignoreversion 32bit; Check: FileNotFound(ExpandConstant('{app}Report\Booking Report by Staff.rpt'));
Source: "Booking Report.rpt"; DestDir: {app}\Report; Flags: ignoreversion 32bit; Check: FileNotFound(ExpandConstant('{app}Report\Booking Report.rpt'));
Source: "Customer Transaction History.rpt"; DestDir: {app}\Report; Flags: ignoreversion 32bit; Check: FileNotFound(ExpandConstant('{app}Report\Customer Transaction History.rpt'));
Source: "Daily Booking Report.rpt"; DestDir: {app}\Report; Flags: ignoreversion 32bit; Check: FileNotFound(ExpandConstant('{app}Report\Daily Booking Report.rpt'));
Source: "Monthly Booking Report.rpt"; DestDir: {app}\Report; Flags: ignoreversion 32bit; Check: FileNotFound(ExpandConstant('{app}Report\Monthly Booking Report.rpt'));
Source: "Official Receipt.rpt"; DestDir: {app}\Report; Flags: ignoreversion 32bit; Check: FileNotFound(ExpandConstant('{app}Report\Official Receipt.rpt'));
Source: "Temporary Receipt.rpt"; DestDir: {app}\Report; Flags: ignoreversion 32bit; Check: FileNotFound(ExpandConstant('{app}Report\Temporary Receipt.rpt'));
Source: "Weekly Booking Graph.rpt"; DestDir: {app}\Report; Flags: ignoreversion 32bit; Check: FileNotFound(ExpandConstant('{app}Report\Weekly Booking Graph.rpt'));
Source: "Weekly Booking Report.rpt"; DestDir: {app}\Report; Flags: ignoreversion 32bit; Check: FileNotFound(ExpandConstant('{app}Report\Weekly Booking Report.rpt'));


;Microsoft Data Access Components Redistributable Installer
Source: "MDAC_TYP.EXE"; DestDir: {tmp}; Flags: deleteafterinstall; Tasks: ado


; NOTE: Don't use "Flags: ignoreversion" on any shared system files
  
[INI]
Filename: "{app}\StarHotel.url"; Section: "InternetShortcut"; Key: "URL"; String: "http://computerise.my/room-booking-system"
  
[Icons]
;Shortcut Icons
Name: "{userstartmenu}\Computerise System Solutions\Star Hotel Demo"; Filename:"{app}\StarHotel.exe"
Name: "{userstartmenu}\Computerise System Solutions\{cm:ProgramOnTheWeb,Star Hotel}"; Filename: "{app}\StarHotel.url"
Name: "{userstartmenu}\Computerise System Solutions\{cm:UninstallProgram,Star Hotel}"; Filename: "{uninstallexe}"
Name: "{userdesktop}\Star Hotel"; Filename: "{app}\StarHotel.exe"; Tasks: desktopicon
  


[Registry]
;For accessing Windows registry
;Run as Admin
Root: HKCU; Subkey: "Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers"; ValueType: string; ValueName: "{app}\StarHotel.exe"; ValueData: RUNASADMIN; flags: uninsdeletevalue; MinVersion: 0,6.0; Tasks: runas




[Run]
;Run misc. process
;Addtional Task


Filename:"{tmp}\MDAC_TYP.EXE"; Parameters: "/Q /C:""setup /QNT"""; WorkingDir:{tmp}; Flags: skipifdoesntexist; Tasks: ado; StatusMsg: Installing Microsoft Data Access Components
[UninstallDelete]
Type: files; Name: "{app}\StarHotel.url"
  


[Code]
//For scripting purposes


//Check if File is not found
function FileNotFound(fname: String): Boolean;
begin
 if FileExists(fname) then
 begin
 Result:=False;
 end else
 begin
 Result:=True;
 end;
end;




//This part will check for VB6 Runtime. Algorithm courtesy of ArvyDas


procedure Explode(var Dest: TArrayOfInteger; Text: String; Separator: String);
Var
  i, p: Integer;
begin
i := 0;
repeat
   SetArrayLength(Dest, i+1);
    p := Pos(Separator,Text);
    if p > 0 then begin
      Dest[i] := StrToInt(Copy(Text, 1, p-1));
      Text := Copy(Text, p + Length(Separator), Length(Text));
      i := i + 1;
    end else begin
      Dest[i] := StrToInt(Text);
      Text := '';
    end;
  until Length(Text)=0;
end;


// Function compares version strings numerically:
//     * when v1 = v2, result = 0
//     * when v1 < v2, result = -1
//     * when v1 > v2, result = 1
//
// Supports version numbers with trailing zeroes, for example 1.02.05.
// Supports comparison of two version number of different lengths, for example
//     CompareVersions('1.2', '2.0.3')
// When any of the parameters is '' (empty string) it considers version number as 0


function NeedUpgrade(v1: String; v2: String): Boolean;
Var
  v1parts: TArrayOfInteger;
  v2parts: TArrayOfInteger;
  i: Integer;
begin
  if v1 = '' then
  begin
    v1 := '0';
  end;


  if v2 = '' then
  begin
    v2 := '0';
  end;


  Explode(v1parts, v1, '.');
  Explode(v2parts, v2, '.');


  if (GetArrayLength(v1parts) > GetArrayLength(v2parts)) then
  begin
    SetArrayLength(v2parts, GetArrayLength(v1parts))
  end else if (GetArrayLength(v2parts) > GetArrayLength(v1parts)) then
  begin
   SetArrayLength(v1parts, GetArrayLength(v2parts))
  end;


  for i := 0 to GetArrayLength(v1parts) - 1 do
  begin
    if v1parts[i] > v2parts[i] then
    begin
      // v1 is greater
      Result := True;
      exit;
    end else if v1parts[i] < v2parts[i] then
    begin
      // v2 is greater 
      Result := False;
      exit;
    end;
  end;


  // Are Equal
  Result := False;
end;


//Check VB6 Runtime if not exists or outdated
function NeedVB(ver: String): Boolean;
Var
path: String;
ver2: String;
begin
  path:=ExpandConstant('{sys}\msvbvm60.dll');
  GetVersionNumbersString(path,ver2);
  If FileExists(path) Then
  begin
    If NeedUpgrade(ver, ver2) Then
    begin
      Result:=True;
    end else
    begin
      Result:=False;
    end;
  end else
  begin
    Result:=True;
  end;
end;


//Check if MDAC is not installed or outdated
function NeedMDAC(ver: String): Boolean;
Var
cVer: String;
mdacver: String;
begin
     if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'Software\Microsoft\DataAccess','Version', cVer) then
     begin
         if pos('4.',ver) > 0 then
         begin
         mdacver:='2.0';
         end else if pos('21.',ver) > 0 then
         begin
         mdacver:='2.1';
         end else if pos('25.',ver) > 0 then
         begin
         mdacver:='2.5';
         end else if pos('5.',ver) > 0 then
         begin
         mdacver:='2.6';
         end else if pos('27.',ver) > 0 then
         begin
         mdacver:='2.7';
         end else if pos('28.',ver) > 0 then
         begin
         mdacver:='2.8';
         end else if pos('6.',ver) > 0 then
         begin
         mdacver:='2.8';
         end else
         begin
         mdacver:='2.8';
         end;
             If needupgrade(mdacver, cVer) Then
             begin
             Result:=True;
             end else
             begin
             Result:=False;
             end;
    end else
    begin
    Result:=True;
    end;
end;
